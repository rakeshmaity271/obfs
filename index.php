<?php

/**
 * PHP Code Obfuscator Demo
 * This file demonstrates basic PHP code obfuscation techniques
 * Note: This standalone obfuscator works without requiring Laravel framework
 */

class SimpleObfuscator
{
    /**
     * Basic string obfuscation by encoding and scrambling
     */
    public function obfuscateString($sourceCode)
    {
        // Simple obfuscation: base64 encode and reverse
        $encoded = base64_encode($sourceCode);
        $reversed = strrev($encoded);
        return $reversed;
    }
    
    /**
     * Deobfuscate the obfuscated string
     */
    public function deobfuscateString($obfuscatedCode)
    {
        // Reverse the obfuscation process
        $reversed = strrev($obfuscatedCode);
        $decoded = base64_decode($reversed);
        return $decoded;
    }
    
    /**
     * Obfuscate a PHP file with basic techniques
     */
    public function obfuscateFile($inputFile, $outputFile)
    {
        try {
            if (!file_exists($inputFile)) {
                throw new Exception("Input file not found: {$inputFile}");
            }
            
            $sourceCode = file_get_contents($inputFile);
            $obfuscatedCode = $this->obfuscateString($sourceCode);
            
            // Create wrapper code that deobfuscates and executes
            $wrapperCode = $this->createWrapperCode($obfuscatedCode);
            
            if (file_put_contents($outputFile, $wrapperCode) === false) {
                throw new Exception("Failed to write output file: {$outputFile}");
            }
            
            return true;
        } catch (Exception $e) {
            echo "Error: " . $e->getMessage() . "\n";
            return false;
        }
    }
    
    /**
     * Create wrapper code that deobfuscates and executes the original code
     */
    private function createWrapperCode($obfuscatedCode)
    {
        $wrapper = '<?php' . "\n";
        $wrapper .= '// Obfuscated PHP Code - Generated by SimpleObfuscator' . "\n";
        $wrapper .= '$obfuscated = "' . addslashes($obfuscatedCode) . '";' . "\n";
        $wrapper .= '$reversed = strrev($obfuscated);' . "\n";
        $wrapper .= '$decoded = base64_decode($reversed);' . "\n";
        $wrapper .= 'if (substr($decoded, 0, 5) === "<?php") {' . "\n";
        $wrapper .= '    $decoded = substr($decoded, 5);' . "\n";
        $wrapper .= '}' . "\n";
        $wrapper .= 'if (substr($decoded, -2) === "?>") {' . "\n";
        $wrapper .= '    $decoded = substr($decoded, 0, -2);' . "\n";
        $wrapper .= '}' . "\n";
        $wrapper .= 'eval($decoded);' . "\n";
        $wrapper .= '?>';
        
        return $wrapper;
    }
    
    /**
     * Generate a simple obfuscated version of PHP code
     */
    public function generateObfuscatedCode($sourceCode)
    {
        // Remove comments and extra whitespace
        $cleaned = preg_replace('/\/\*.*?\*\//s', '', $sourceCode);
        $cleaned = preg_replace('/\/\/.*$/m', '', $cleaned);
        $cleaned = preg_replace('/\s+/', ' ', $cleaned);
        
        // Basic variable name obfuscation
        $obfuscated = $this->obfuscateString($cleaned);
        
        return $obfuscated;
    }
}

// Example usage
if (php_sapi_name() === 'cli') {
    echo "=== PHP Code Obfuscator Demo ===\n";
    echo "Note: This standalone obfuscator works without requiring Laravel framework\n";
    echo "This demo shows basic obfuscation techniques\n\n";
    
    $obfuscator = new SimpleObfuscator();
    
    // Example: Obfuscate a simple PHP code string
    $sampleCode = '<?php echo "Hello, World!"; ?>';
    echo "Original code: " . $sampleCode . "\n";
    
    $obfuscated = $obfuscator->obfuscateString($sampleCode);
    echo "Obfuscated code: " . $obfuscated . "\n";
    
    $deobfuscated = $obfuscator->deobfuscateString($obfuscated);
    echo "Deobfuscated code: " . $deobfuscated . "\n";
    
    // Example: Obfuscate the example.php file
    if (file_exists('example.php')) {
        echo "\nObfuscating example.php...\n";
        if ($obfuscator->obfuscateFile('example.php', 'example_obfuscated.php')) {
            echo "Successfully created example_obfuscated.php\n";
        }
    }
    
    echo "\nObfuscation demo completed!\n";
} else {
    // Web interface
    echo "<h1>PHP Code Obfuscator Demo</h1>";
    echo "<p><strong>Note:</strong> This standalone obfuscator works without requiring Laravel framework</p>";
    echo "<p>This demo shows basic obfuscation techniques that work standalone.</p>";
    
    if (isset($_POST['code'])) {
        $obfuscator = new SimpleObfuscator();
        $inputCode = $_POST['code'];
        $obfuscatedCode = $obfuscator->obfuscateString($inputCode);
        
        echo "<h3>Results:</h3>";
        echo "<p><strong>Original:</strong> <code>" . htmlspecialchars($inputCode) . "</code></p>";
        echo "<p><strong>Obfuscated:</strong> <code>" . htmlspecialchars($obfuscatedCode) . "</code></p>";
    }
    
    echo "<form method='post'>";
    echo "<h3>Try it yourself:</h3>";
    echo "<textarea name='code' rows='5' cols='50' placeholder='Enter PHP code here...'><?php echo 'Hello World'; ?></textarea><br><br>";
    echo "<input type='submit' value='Obfuscate Code'>";
    echo "</form>";
}
